//
// Created by bartosz on 3/3/22.
//

#ifndef SMART_LIGHT_BLESETUPSTATE_H
#define SMART_LIGHT_BLESETUPSTATE_H

#include "SmartLightFSM.h"

#include "esp_gatt_common_api.h"

class BleSetupState : public SmartLightState {
public:
	BleSetupState(SmartLightFSM* fsm);

	void begin() override;

	void loop() override;
};


enum SetupServiceIndex {
	SETUP_IDX_SVC,

	SETUP_IDX_CHAR_WIFI_SSID,
	SETUP_IDX_CHAR_VAL_WIFI_SSID,

	SETUP_IDX_CHAR_WIFI_PASSWD,
	SETUP_IDX_CHAR_VAL_WIFI_PASSWD,

	SETUP_IDX_CHAR_MODE,
	SETUP_IDX_CHAR_VAL_MODE,

	SETUP_IDX_CHAR_CONTROL_POINT,
	SETUP_IDX_CHAR_VAL_CONTROL_POINT,
	SETUP_IDX_CHAR_CFG_CONTROL_POINT,

	SETUP_IDX_COUNT,
};

enum {
	MQTT_IDX_SVC,

	MQTT_IDX_CHAR_USERNAME,
	MQTT_IDX_CHAR_VAL_USERNAME,

	MQTT_IDX_CHAR_PASSWD,
	MQTT_IDX_CHAR_VAL_PASSWD,

	MQTT_IDX_CHAR_BROKER_IP,
	MQTT_IDX_CHAR_VAL_BROKER_IP,

	MQTT_IDX_CHAR_BROKER_PORT,
	MQTT_IDX_CHAR_VAL_BROKER_PORT,

	MQTT_IDX_CHAR_DEVICE_NAME,
	MQTT_IDX_CHAR_VAL_DEVICE_NAME,

	MQTT_IDX_CHAR_DEVICE_GROUP,
	MQTT_IDX_CHAR_VAL_DEVICE_GROUP,

	MQTT_IDX_COUNT,
};


enum SmartLightBleService {
	SL_BLE_SVC_SETUP,
	SL_BLE_SVC_MQTT,
	SL_BLE_SVC_COUNT
};


struct GattServiceData {
	uint32_t attrCount;
	uint16_t handles[SETUP_IDX_COUNT + MQTT_IDX_COUNT];
	uint8_t* data[SETUP_IDX_COUNT + MQTT_IDX_COUNT];
};


#endif //SMART_LIGHT_BLESETUPSTATE_H
